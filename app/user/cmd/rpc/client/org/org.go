// Code generated by goctl. DO NOT EDIT.
// Source: org.proto

package org

import (
	"context"

	"yufuture-gpt/app/user/cmd/rpc/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AgreeApplyJoinOrgReq   = user.AgreeApplyJoinOrgReq
	AgreeApplyJoinOrgResp  = user.AgreeApplyJoinOrgResp
	AgreeInviteJoinOrgReq  = user.AgreeInviteJoinOrgReq
	AgreeInviteJoinOrgResp = user.AgreeInviteJoinOrgResp
	ApplyJoinOrgReq        = user.ApplyJoinOrgReq
	ApplyJoinOrgResp       = user.ApplyJoinOrgResp
	ChangeUserRoleReq      = user.ChangeUserRoleReq
	ChangeUserRoleResp     = user.ChangeUserRoleResp
	CreateRoleReq          = user.CreateRoleReq
	CreateRoleResp         = user.CreateRoleResp
	DeleteUserReq          = user.DeleteUserReq
	DeleteUserResp         = user.DeleteUserResp
	GivePowerAvgReq        = user.GivePowerAvgReq
	GivePowerAvgResp       = user.GivePowerAvgResp
	GivePowerReq           = user.GivePowerReq
	GivePowerResp          = user.GivePowerResp
	GivePowerShopAvgReq    = user.GivePowerShopAvgReq
	GivePowerShopAvgResp   = user.GivePowerShopAvgResp
	GivePowerShopReq       = user.GivePowerShopReq
	GivePowerShopResp      = user.GivePowerShopResp
	InviteJoinOrgReq       = user.InviteJoinOrgReq
	InviteJoinOrgResp      = user.InviteJoinOrgResp
	OrgPerm                = user.OrgPerm
	OrgPermListReq         = user.OrgPermListReq
	OrgPermListResp        = user.OrgPermListResp
	OrgRole                = user.OrgRole
	OrgRoleListReq         = user.OrgRoleListReq
	OrgRoleListResp        = user.OrgRoleListResp
	OrgShop                = user.OrgShop
	OrgShopPageListReq     = user.OrgShopPageListReq
	OrgShopPageListResp    = user.OrgShopPageListResp
	OrgUser                = user.OrgUser
	OrgUserListReq         = user.OrgUserListReq
	OrgUserListResp        = user.OrgUserListResp
	OrgUserPageListReq     = user.OrgUserPageListReq
	OrgUserPageListResp    = user.OrgUserPageListResp
	PauseUserReq           = user.PauseUserReq
	PauseUserResp          = user.PauseUserResp
	ResumeUserReq          = user.ResumeUserReq
	ResumeUserResp         = user.ResumeUserResp
	RolePerm               = user.RolePerm
	RoleShop               = user.RoleShop
	RoleUser               = user.RoleUser
	SearchOrgInfo          = user.SearchOrgInfo
	SearchOrgReq           = user.SearchOrgReq
	SearchOrgReqResp       = user.SearchOrgReqResp
	SearchUserInfo         = user.SearchUserInfo
	SearchUserReq          = user.SearchUserReq
	SearchUserResp         = user.SearchUserResp
	ShopRole               = user.ShopRole
	ShopUser               = user.ShopUser
	UpdateRoleReq          = user.UpdateRoleReq
	UpdateRoleResp         = user.UpdateRoleResp
	UpdateShopAssignReq    = user.UpdateShopAssignReq
	UpdateShopAssignResp   = user.UpdateShopAssignResp
	UserPerm               = user.UserPerm
	UserRole               = user.UserRole

	Org interface {
		// 查找团队
		SearchOrg(ctx context.Context, in *SearchOrgReq, opts ...grpc.CallOption) (*SearchOrgReqResp, error)
		// 查找用户
		SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error)
		// 用户申请加入团队
		ApplyJoinOrg(ctx context.Context, in *ApplyJoinOrgReq, opts ...grpc.CallOption) (*ApplyJoinOrgResp, error)
		// 邀请用户加入团队
		InviteJoinOrg(ctx context.Context, in *InviteJoinOrgReq, opts ...grpc.CallOption) (*InviteJoinOrgResp, error)
		// 同意用户申请加入团队
		AgreeApplyJoinOrg(ctx context.Context, in *AgreeApplyJoinOrgReq, opts ...grpc.CallOption) (*AgreeApplyJoinOrgResp, error)
		// 同意用户邀请加入团队
		AgreeInviteJoinOrg(ctx context.Context, in *AgreeInviteJoinOrgReq, opts ...grpc.CallOption) (*AgreeInviteJoinOrgResp, error)
		// 获取团队角色列表
		GetOrgRoleList(ctx context.Context, in *OrgRoleListReq, opts ...grpc.CallOption) (*OrgRoleListResp, error)
		// 获取团队权限列表
		GetOrgPermList(ctx context.Context, in *OrgPermListReq, opts ...grpc.CallOption) (*OrgPermListResp, error)
		// 创建角色
		CreateRole(ctx context.Context, in *CreateRoleReq, opts ...grpc.CallOption) (*CreateRoleResp, error)
		// 更新角色
		UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleResp, error)
		// 获取团队用户列表
		GetOrgUserList(ctx context.Context, in *OrgUserListReq, opts ...grpc.CallOption) (*OrgUserListResp, error)
		// 获取团队用户分页列表
		GetOrgUserPageList(ctx context.Context, in *OrgUserPageListReq, opts ...grpc.CallOption) (*OrgUserPageListResp, error)
		// 修改用户角色
		ChangeUserRole(ctx context.Context, in *ChangeUserRoleReq, opts ...grpc.CallOption) (*ChangeUserRoleResp, error)
		// 删除用户
		DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserResp, error)
		// 暂停用户
		PauseUser(ctx context.Context, in *PauseUserReq, opts ...grpc.CallOption) (*PauseUserResp, error)
		// 恢复用户
		ResumeUser(ctx context.Context, in *ResumeUserReq, opts ...grpc.CallOption) (*ResumeUserResp, error)
		// 分配算力
		GivePower(ctx context.Context, in *GivePowerReq, opts ...grpc.CallOption) (*GivePowerResp, error)
		// 平均分配算力
		GivePowerAvg(ctx context.Context, in *GivePowerAvgReq, opts ...grpc.CallOption) (*GivePowerAvgResp, error)
		// 分配店铺算力
		GivePowerShop(ctx context.Context, in *GivePowerShopReq, opts ...grpc.CallOption) (*GivePowerShopResp, error)
		// 平均分配店铺算力
		GivePowerShopAvg(ctx context.Context, in *GivePowerShopAvgReq, opts ...grpc.CallOption) (*GivePowerShopAvgResp, error)
		// 获取团队店铺分页列表
		GetOrgShopPageList(ctx context.Context, in *OrgShopPageListReq, opts ...grpc.CallOption) (*OrgShopPageListResp, error)
		// 编辑店铺指派
		UpdateShopAssign(ctx context.Context, in *UpdateShopAssignReq, opts ...grpc.CallOption) (*UpdateShopAssignResp, error)
	}

	defaultOrg struct {
		cli zrpc.Client
	}
)

func NewOrg(cli zrpc.Client) Org {
	return &defaultOrg{
		cli: cli,
	}
}

// 查找团队
func (m *defaultOrg) SearchOrg(ctx context.Context, in *SearchOrgReq, opts ...grpc.CallOption) (*SearchOrgReqResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.SearchOrg(ctx, in, opts...)
}

// 查找用户
func (m *defaultOrg) SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.SearchUser(ctx, in, opts...)
}

// 用户申请加入团队
func (m *defaultOrg) ApplyJoinOrg(ctx context.Context, in *ApplyJoinOrgReq, opts ...grpc.CallOption) (*ApplyJoinOrgResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.ApplyJoinOrg(ctx, in, opts...)
}

// 邀请用户加入团队
func (m *defaultOrg) InviteJoinOrg(ctx context.Context, in *InviteJoinOrgReq, opts ...grpc.CallOption) (*InviteJoinOrgResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.InviteJoinOrg(ctx, in, opts...)
}

// 同意用户申请加入团队
func (m *defaultOrg) AgreeApplyJoinOrg(ctx context.Context, in *AgreeApplyJoinOrgReq, opts ...grpc.CallOption) (*AgreeApplyJoinOrgResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.AgreeApplyJoinOrg(ctx, in, opts...)
}

// 同意用户邀请加入团队
func (m *defaultOrg) AgreeInviteJoinOrg(ctx context.Context, in *AgreeInviteJoinOrgReq, opts ...grpc.CallOption) (*AgreeInviteJoinOrgResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.AgreeInviteJoinOrg(ctx, in, opts...)
}

// 获取团队角色列表
func (m *defaultOrg) GetOrgRoleList(ctx context.Context, in *OrgRoleListReq, opts ...grpc.CallOption) (*OrgRoleListResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.GetOrgRoleList(ctx, in, opts...)
}

// 获取团队权限列表
func (m *defaultOrg) GetOrgPermList(ctx context.Context, in *OrgPermListReq, opts ...grpc.CallOption) (*OrgPermListResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.GetOrgPermList(ctx, in, opts...)
}

// 创建角色
func (m *defaultOrg) CreateRole(ctx context.Context, in *CreateRoleReq, opts ...grpc.CallOption) (*CreateRoleResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.CreateRole(ctx, in, opts...)
}

// 更新角色
func (m *defaultOrg) UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.UpdateRole(ctx, in, opts...)
}

// 获取团队用户列表
func (m *defaultOrg) GetOrgUserList(ctx context.Context, in *OrgUserListReq, opts ...grpc.CallOption) (*OrgUserListResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.GetOrgUserList(ctx, in, opts...)
}

// 获取团队用户分页列表
func (m *defaultOrg) GetOrgUserPageList(ctx context.Context, in *OrgUserPageListReq, opts ...grpc.CallOption) (*OrgUserPageListResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.GetOrgUserPageList(ctx, in, opts...)
}

// 修改用户角色
func (m *defaultOrg) ChangeUserRole(ctx context.Context, in *ChangeUserRoleReq, opts ...grpc.CallOption) (*ChangeUserRoleResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.ChangeUserRole(ctx, in, opts...)
}

// 删除用户
func (m *defaultOrg) DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.DeleteUser(ctx, in, opts...)
}

// 暂停用户
func (m *defaultOrg) PauseUser(ctx context.Context, in *PauseUserReq, opts ...grpc.CallOption) (*PauseUserResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.PauseUser(ctx, in, opts...)
}

// 恢复用户
func (m *defaultOrg) ResumeUser(ctx context.Context, in *ResumeUserReq, opts ...grpc.CallOption) (*ResumeUserResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.ResumeUser(ctx, in, opts...)
}

// 分配算力
func (m *defaultOrg) GivePower(ctx context.Context, in *GivePowerReq, opts ...grpc.CallOption) (*GivePowerResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.GivePower(ctx, in, opts...)
}

// 平均分配算力
func (m *defaultOrg) GivePowerAvg(ctx context.Context, in *GivePowerAvgReq, opts ...grpc.CallOption) (*GivePowerAvgResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.GivePowerAvg(ctx, in, opts...)
}

// 分配店铺算力
func (m *defaultOrg) GivePowerShop(ctx context.Context, in *GivePowerShopReq, opts ...grpc.CallOption) (*GivePowerShopResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.GivePowerShop(ctx, in, opts...)
}

// 平均分配店铺算力
func (m *defaultOrg) GivePowerShopAvg(ctx context.Context, in *GivePowerShopAvgReq, opts ...grpc.CallOption) (*GivePowerShopAvgResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.GivePowerShopAvg(ctx, in, opts...)
}

// 获取团队店铺分页列表
func (m *defaultOrg) GetOrgShopPageList(ctx context.Context, in *OrgShopPageListReq, opts ...grpc.CallOption) (*OrgShopPageListResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.GetOrgShopPageList(ctx, in, opts...)
}

// 编辑店铺指派
func (m *defaultOrg) UpdateShopAssign(ctx context.Context, in *UpdateShopAssignReq, opts ...grpc.CallOption) (*UpdateShopAssignResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.UpdateShopAssign(ctx, in, opts...)
}
