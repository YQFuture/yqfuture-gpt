// Code generated by goctl. DO NOT EDIT.
// Source: org.proto

package org

import (
	"context"

	"yufuture-gpt/app/user/cmd/rpc/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SearchOrgInfo    = user.SearchOrgInfo
	SearchOrgReq     = user.SearchOrgReq
	SearchOrgReqResp = user.SearchOrgReqResp
	SearchUser       = user.SearchUser
	SearchUserInfo   = user.SearchUserInfo
	SearchUserResp   = user.SearchUserResp

	Org interface {
		// 查找团队
		SearchOrg(ctx context.Context, in *SearchOrgReq, opts ...grpc.CallOption) (*SearchOrgReqResp, error)
		// 查找用户
		SearchUser(ctx context.Context, in *SearchUser, opts ...grpc.CallOption) (*SearchUserResp, error)
	}

	defaultOrg struct {
		cli zrpc.Client
	}
)

func NewOrg(cli zrpc.Client) Org {
	return &defaultOrg{
		cli: cli,
	}
}

// 查找团队
func (m *defaultOrg) SearchOrg(ctx context.Context, in *SearchOrgReq, opts ...grpc.CallOption) (*SearchOrgReqResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.SearchOrg(ctx, in, opts...)
}

// 查找用户
func (m *defaultOrg) SearchUser(ctx context.Context, in *SearchUser, opts ...grpc.CallOption) (*SearchUserResp, error) {
	client := user.NewOrgClient(m.cli.Conn())
	return client.SearchUser(ctx, in, opts...)
}
