// Code generated by goctl. DO NOT EDIT.
// Source: org.proto

package server

import (
	"context"

	"yufuture-gpt/app/user/cmd/rpc/internal/logic/org"
	"yufuture-gpt/app/user/cmd/rpc/internal/svc"
	"yufuture-gpt/app/user/cmd/rpc/pb/user"
)

type OrgServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedOrgServer
}

func NewOrgServer(svcCtx *svc.ServiceContext) *OrgServer {
	return &OrgServer{
		svcCtx: svcCtx,
	}
}

// 查找团队
func (s *OrgServer) SearchOrg(ctx context.Context, in *user.SearchOrgReq) (*user.SearchOrgReqResp, error) {
	l := orglogic.NewSearchOrgLogic(ctx, s.svcCtx)
	return l.SearchOrg(in)
}

// 查找用户
func (s *OrgServer) SearchUser(ctx context.Context, in *user.SearchUserReq) (*user.SearchUserResp, error) {
	l := orglogic.NewSearchUserLogic(ctx, s.svcCtx)
	return l.SearchUser(in)
}

// 用户申请加入团队
func (s *OrgServer) ApplyJoinOrg(ctx context.Context, in *user.ApplyJoinOrgReq) (*user.ApplyJoinOrgResp, error) {
	l := orglogic.NewApplyJoinOrgLogic(ctx, s.svcCtx)
	return l.ApplyJoinOrg(in)
}

// 邀请用户加入团队
func (s *OrgServer) InviteJoinOrg(ctx context.Context, in *user.InviteJoinOrgReq) (*user.InviteJoinOrgResp, error) {
	l := orglogic.NewInviteJoinOrgLogic(ctx, s.svcCtx)
	return l.InviteJoinOrg(in)
}

// 同意用户申请加入团队
func (s *OrgServer) AgreeApplyJoinOrg(ctx context.Context, in *user.AgreeApplyJoinOrgReq) (*user.AgreeApplyJoinOrgResp, error) {
	l := orglogic.NewAgreeApplyJoinOrgLogic(ctx, s.svcCtx)
	return l.AgreeApplyJoinOrg(in)
}

// 同意用户邀请加入团队
func (s *OrgServer) AgreeInviteJoinOrg(ctx context.Context, in *user.AgreeInviteJoinOrgReq) (*user.AgreeInviteJoinOrgResp, error) {
	l := orglogic.NewAgreeInviteJoinOrgLogic(ctx, s.svcCtx)
	return l.AgreeInviteJoinOrg(in)
}
