// Code generated by goctl. DO NOT EDIT.
// Source: org.proto

package server

import (
	"context"

	"yufuture-gpt/app/user/cmd/rpc/internal/logic/org"
	"yufuture-gpt/app/user/cmd/rpc/internal/svc"
	"yufuture-gpt/app/user/cmd/rpc/pb/user"
)

type OrgServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedOrgServer
}

func NewOrgServer(svcCtx *svc.ServiceContext) *OrgServer {
	return &OrgServer{
		svcCtx: svcCtx,
	}
}

// 查找团队
func (s *OrgServer) SearchOrg(ctx context.Context, in *user.SearchOrgReq) (*user.SearchOrgReqResp, error) {
	l := orglogic.NewSearchOrgLogic(ctx, s.svcCtx)
	return l.SearchOrg(in)
}

// 查找用户
func (s *OrgServer) SearchUser(ctx context.Context, in *user.SearchUserReq) (*user.SearchUserResp, error) {
	l := orglogic.NewSearchUserLogic(ctx, s.svcCtx)
	return l.SearchUser(in)
}

// 用户申请加入团队
func (s *OrgServer) ApplyJoinOrg(ctx context.Context, in *user.ApplyJoinOrgReq) (*user.ApplyJoinOrgResp, error) {
	l := orglogic.NewApplyJoinOrgLogic(ctx, s.svcCtx)
	return l.ApplyJoinOrg(in)
}

// 邀请用户加入团队
func (s *OrgServer) InviteJoinOrg(ctx context.Context, in *user.InviteJoinOrgReq) (*user.InviteJoinOrgResp, error) {
	l := orglogic.NewInviteJoinOrgLogic(ctx, s.svcCtx)
	return l.InviteJoinOrg(in)
}

// 同意用户申请加入团队
func (s *OrgServer) AgreeApplyJoinOrg(ctx context.Context, in *user.AgreeApplyJoinOrgReq) (*user.AgreeApplyJoinOrgResp, error) {
	l := orglogic.NewAgreeApplyJoinOrgLogic(ctx, s.svcCtx)
	return l.AgreeApplyJoinOrg(in)
}

// 同意用户邀请加入团队
func (s *OrgServer) AgreeInviteJoinOrg(ctx context.Context, in *user.AgreeInviteJoinOrgReq) (*user.AgreeInviteJoinOrgResp, error) {
	l := orglogic.NewAgreeInviteJoinOrgLogic(ctx, s.svcCtx)
	return l.AgreeInviteJoinOrg(in)
}

// 获取团队角色列表
func (s *OrgServer) GetOrgRoleList(ctx context.Context, in *user.OrgRoleListReq) (*user.OrgRoleListResp, error) {
	l := orglogic.NewGetOrgRoleListLogic(ctx, s.svcCtx)
	return l.GetOrgRoleList(in)
}

// 获取团队权限列表
func (s *OrgServer) GetOrgPermList(ctx context.Context, in *user.OrgPermListReq) (*user.OrgPermListResp, error) {
	l := orglogic.NewGetOrgPermListLogic(ctx, s.svcCtx)
	return l.GetOrgPermList(in)
}

// 创建角色
func (s *OrgServer) CreateRole(ctx context.Context, in *user.CreateRoleReq) (*user.CreateRoleResp, error) {
	l := orglogic.NewCreateRoleLogic(ctx, s.svcCtx)
	return l.CreateRole(in)
}

// 更新角色
func (s *OrgServer) UpdateRole(ctx context.Context, in *user.UpdateRoleReq) (*user.UpdateRoleResp, error) {
	l := orglogic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

// 获取团队用户分页列表
func (s *OrgServer) GetOrgUserPageList(ctx context.Context, in *user.OrgUserPageListReq) (*user.OrgUserPageListResp, error) {
	l := orglogic.NewGetOrgUserPageListLogic(ctx, s.svcCtx)
	return l.GetOrgUserPageList(in)
}

// 修改用户角色
func (s *OrgServer) ChangeUserRole(ctx context.Context, in *user.ChangeUserRoleReq) (*user.ChangeUserRoleResp, error) {
	l := orglogic.NewChangeUserRoleLogic(ctx, s.svcCtx)
	return l.ChangeUserRole(in)
}

// 删除用户
func (s *OrgServer) DeleteUser(ctx context.Context, in *user.DeleteUserReq) (*user.DeleteUserResp, error) {
	l := orglogic.NewDeleteUserLogic(ctx, s.svcCtx)
	return l.DeleteUser(in)
}

// 暂停用户
func (s *OrgServer) PauseUser(ctx context.Context, in *user.PauseUserReq) (*user.PauseUserResp, error) {
	l := orglogic.NewPauseUserLogic(ctx, s.svcCtx)
	return l.PauseUser(in)
}

// 恢复用户
func (s *OrgServer) ResumeUser(ctx context.Context, in *user.ResumeUserReq) (*user.ResumeUserResp, error) {
	l := orglogic.NewResumeUserLogic(ctx, s.svcCtx)
	return l.ResumeUser(in)
}

// 分配算力
func (s *OrgServer) GivePower(ctx context.Context, in *user.GivePowerReq) (*user.GivePowerResp, error) {
	l := orglogic.NewGivePowerLogic(ctx, s.svcCtx)
	return l.GivePower(in)
}

// 平均分配算力
func (s *OrgServer) GivePowerAvg(ctx context.Context, in *user.GivePowerAvgReq) (*user.GivePowerAvgResp, error) {
	l := orglogic.NewGivePowerAvgLogic(ctx, s.svcCtx)
	return l.GivePowerAvg(in)
}

// 分配店铺算力
func (s *OrgServer) GivePowerShop(ctx context.Context, in *user.GivePowerShopReq) (*user.GivePowerShopResp, error) {
	l := orglogic.NewGivePowerShopLogic(ctx, s.svcCtx)
	return l.GivePowerShop(in)
}

// 平均分配店铺算力
func (s *OrgServer) GivePowerShopAvg(ctx context.Context, in *user.GivePowerShopAvgReq) (*user.GivePowerShopAvgResp, error) {
	l := orglogic.NewGivePowerShopAvgLogic(ctx, s.svcCtx)
	return l.GivePowerShopAvg(in)
}

// 获取团队店铺分页列表
func (s *OrgServer) GetOrgShopPageList(ctx context.Context, in *user.OrgShopPageListReq) (*user.OrgShopPageListResp, error) {
	l := orglogic.NewGetOrgShopPageListLogic(ctx, s.svcCtx)
	return l.GetOrgShopPageList(in)
}
