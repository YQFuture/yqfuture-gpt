// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	login "yufuture-gpt/app/user/cmd/api/internal/handler/login"
	user "yufuture-gpt/app/user/cmd/api/internal/handler/user"
	"yufuture-gpt/app/user/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 获取图像验证码
				Method:  http.MethodGet,
				Path:    "/getCaptcha",
				Handler: login.GetCaptchaHandler(serverCtx),
			},
			{
				// 获取微信登录二维码
				Method:  http.MethodGet,
				Path:    "/getLoginQrCode",
				Handler: login.GetLoginQrCodeHandler(serverCtx),
			},
			{
				// 获取微信扫码登录状态
				Method:  http.MethodGet,
				Path:    "/getQrCodeLoginStatus",
				Handler: login.GetQrCodeLoginStatusHandler(serverCtx),
			},
			{
				// 获取手机短信验证码
				Method:  http.MethodPost,
				Path:    "/getVerificationCode",
				Handler: login.GetVerificationCodeHandler(serverCtx),
			},
			{
				// 登录
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: login.LoginHandler(serverCtx),
			},
			{
				// 注册
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: login.RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/login"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 微信回调
				Method:  http.MethodGet,
				Path:    "/wechatCallBack",
				Handler: login.WechatCallBackGetHandler(serverCtx),
			},
			{
				// 微信回调
				Method:  http.MethodPost,
				Path:    "/wechatCallBack",
				Handler: login.WechatCallBackPostHandler(serverCtx),
			},
		},
		rest.WithPrefix("/wechat"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 绑定手机号码
				Method:  http.MethodPost,
				Path:    "/bindPhone",
				Handler: user.BindPhoneHandler(serverCtx),
			},
			{
				// 获取当前登录用户数据
				Method:  http.MethodPost,
				Path:    "/getCurrentUserData",
				Handler: user.GetCurrentUserDataHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/wechat"),
	)
}
