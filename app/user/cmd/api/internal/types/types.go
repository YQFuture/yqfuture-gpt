// Code generated by goctl. DO NOT EDIT.
package types

type AgreeApplyJoinOrgReq struct {
	MessageId string `json:"messageId"` // 消息id
}

type AgreeApplyJoinOrgResp struct {
	BaseResp
}

type AgreeInviteJoinOrgReq struct {
	MessageId string `json:"messageId"` // 消息id
}

type AgreeInviteJoinOrgResp struct {
	BaseResp
}

type ApplyJoinOrgReq struct {
	OrgId string `json:"orgId"` // 组织id
}

type ApplyJoinOrgResp struct {
	BaseResp
}

type BasePageReq struct {
	PageNum  int64  `json:"pageNum"`  // 页码
	PageSize int64  `json:"pageSize"` // 每页条数
	Query    string `json:"query"`    // 查询条件
}

type BasePageResp struct {
	PageNum  int64 `json:"pageNum"`  // 页码
	PageSize int64 `json:"pageSize"` // 每页条数
	Total    int64 `json:"total"`    // 总条数
}

type BaseReq struct {
}

type BaseResp struct {
	Code int    `json:"code"` // 状态码
	Msg  string `json:"msg"`  // 信息
}

type BindPhoneReq struct {
	Phone               string `json:"phone"`               // 手机号码
	VerificationCode    string `json:"verificationCode"`    // 手机验证码
	ThirtyDaysFreeLogin bool   `json:"thirtyDaysFreeLogin"` // 是否30天免登录
}

type BindPhoneResp struct {
	BaseResp
	Data UserInfo `json:"data"` // 用户信息
}

type CaptchaData struct {
	CaptchaId  string `json:"captchaId"`  // 验证码ID
	CaptchaImg string `json:"captchaImg"` // 验证码图片
}

type CaptchaResp struct {
	BaseResp
	Data CaptchaData `json:"data"` // 图形验证码信息
}

type ChangeOrgReq struct {
	OrgId string `json:"orgId"` // 组织ID
}

type CreateRoleReq struct {
	RoleName   string   `json:"roleName"`
	PermIdList []string `json:"permIdList"`
}

type CreateRoleResp struct {
	BaseResp
}

type CurrentUserData struct {
	Token          string  `json:"token"`          // JWT Token
	Phone          string  `json:"phone"`          // 手机号码
	NickName       string  `json:"nickname"`       // 昵称
	HeadImg        string  `json:"headImg"`        // 头像
	NowOrg         OrgInfo `json:"nowOrg"`         // 当前组织信息
	UnreadMsgCount int64   `json:"unreadMsgCount"` // 未读消息数量
}

type CurrentUserDataResp struct {
	BaseResp
	Data CurrentUserData `json:"data"` // 当前登录用户数据
}

type DictInfo struct {
	Name     string `json:"name"`     // 名称
	Value    string `json:"value"`    // 值
	OrderNum int64  `json:"orderNum"` // 排序
}

type DictInfoByTypeReq struct {
	Key string `json:"key"` // 类型key
}

type DictInfoByTypeResp struct {
	BaseResp
	Data []*DictInfo `json:"data"` // 字典列表
}

type FileDownloadReq struct {
	Path     string `path:"path"`      // 文件路径
	FileName string `path:"objectKey"` // 文件名称
}

type FileUploadResp struct {
	BaseResp
	Data string `json:"data"` // 文件对象Key
}

type IgnoreMessageReq struct {
	MessageId string `json:"messageId"` // 消息ID
}

type InviteJoinOrgReq struct {
	InviteUserId string `json:"inviteUserId"` // 邀请用户id
}

type InviteJoinOrgResp struct {
	BaseResp
}

type LogOutReq struct {
}

type LogOutResp struct {
	BaseResp
}

type LoginQrCodeData struct {
	TicketQrCodeUrl string `json:"ticketQrCodeUrl"` // 二维码图片链接
	Ticket          string `json:"ticket"`          // 二维码票据
}

type LoginQrCodeResp struct {
	BaseResp
	Data LoginQrCodeData `json:"data"` // 登录二维码内容
}

type LoginReq struct {
	Phone               string `json:"phone"`               // 手机号码
	VerificationCode    string `json:"verificationCode"`    // 手机验证码
	CaptchaId           string `json:"captchaId"`           // 验证码ID
	Answer              string `json:"answer"`              // 验证码答案
	ThirtyDaysFreeLogin bool   `json:"thirtyDaysFreeLogin"` // 是否30天免登录
}

type LoginResp struct {
	BaseResp
	Data UserInfo `json:"data"` // 用户信息
}

type MessageInfo struct {
	MessageId          string `json:"messageId"`          // 消息ID
	MessageContentType int64  `json:"messageContentType"` // 消息内容类型 0: 文字 1: 图文 2: 图片 3: 邀请加入组织 4: 申请加入组织 5: 平台掉线 6: 算力不足 7: 转接失败
	MessageContent     string `json:"messageContent"`     // 消息内容
	DealFlag           int64  `json:"dealFlag"`           // 处理标记 0: 未处理 1: 已处理
	IgnoreFlag         int64  `json:"ignoreFlag"`         // 忽略标记 0: 未忽略 1: 已忽略
	CreateTime         int64  `json:"createTime"`         // 创建时间
}

type MessageListReq struct {
	MessageId  string `json:"messageId"`  // 消息ID
	TimeVector int64  `json:"timeVector"` // 时间向量 0: 新消息 1: 旧消息
}

type MessageListResp struct {
	BaseResp
	Data []MessageInfo `json:"data"` // 消息列表
}

type OrgInfo struct {
	OrgId      string `json:"orgId"`      // 组织ID
	OrgName    string `json:"orgName"`    // 组织名称
	BundleType int64  `json:"bundleType"` // 套餐类型 0: 免费版 1: 基础版 2: AI个人版 3: AI协作版
	IsAdmin    bool   `json:"isAdmin"`    // 是否是管理员
}

type OrgListResp struct {
	BaseResp
	Data []OrgInfo `json:"data"` // 组织列表
}

type OrgPerm struct {
	PermId   string    `json:"permId"`
	PermName string    `json:"permName"`
	PermCode string    `json:"permCode"`
	ParentId string    `json:"parentId"`
	Children []OrgPerm `json:"children"`
}

type OrgPermTreeReq struct {
}

type OrgPermTreeResp struct {
	BaseResp
	Data []OrgPerm `json:"data"`
}

type OrgRole struct {
	RoleId   string     `json:"roleId"`
	RoleName string     `json:"roleName"`
	PermList []RolePerm `json:"permList"`
	ShopList []RoleShop `json:"shopList"`
	UserList []RoleUser `json:"userList"`
}

type OrgRoleListReq struct {
	Query string `json:"query"` // 查询
}

type OrgRoleListResp struct {
	BaseResp
	Data []OrgRole `json:"data"`
}

type QrCodeLoginStatusReq struct {
	Ticket              string `json:"ticket"`              // 二维码票据
	ThirtyDaysFreeLogin bool   `json:"thirtyDaysFreeLogin"` // 是否30天免登录
}

type QrCodeLoginStatusResp struct {
	BaseResp
	Data UserInfo `json:"data"` // 用户信息
}

type RegisterReq struct {
	Phone            string `json:"phone"`            // 手机号码
	VerificationCode string `json:"verificationCode"` // 手机验证码
	CaptchaId        string `json:"captchaId"`        // 验证码ID
	Answer           string `json:"answer"`           // 验证码答案
}

type RegisterResp struct {
	BaseResp
	Data UserInfo `json:"data"` // 用户信息
}

type RolePerm struct {
	PermId   string `json:"permId"`
	PermName string `json:"permName"`
	PermCode string `json:"permCode"`
}

type RoleShop struct {
	ShopId       string `json:"shopId"`
	ShopName     string `json:"shopName"`
	PlatformType int64  `json:"platformType"`
}

type RoleUser struct {
	UserId   string `json:"userId"`
	NickName string `json:"nickName"`
	HeadImg  string `json:"headImg"`
}

type SearchOrgInfo struct {
	OrgId   string `json:"orgId"`
	OrgName string `json:"orgName"`
}

type SearchOrgReq struct {
	Query string `json:"query"` // 查询
}

type SearchOrgResp struct {
	BaseResp
	Data []SearchOrgInfo `json:"data"`
}

type SearchUserInfo struct {
	UserId string `json:"userId"`
	Phone  string `json:"phone"`
}

type SearchUserReq struct {
	Query string `json:"query"` // 查询
}

type SearchUserResp struct {
	BaseResp
	Data []SearchUserInfo `json:"data"`
}

type UpdateHeadImgReq struct {
	HeadImg string `json:"headImg"` // 新头像URL
}

type UpdateNickNameReq struct {
	NickName string `json:"nickName"` // 新昵称
}

type UpdateOrgNameReq struct {
	OrgId   string `json:"orgId"`   // 组织ID
	OrgName string `json:"orgName"` // 新组织名称
}

type UpdateRoleReq struct {
	RoleId     string   `json:"roleId"`
	RoleName   string   `json:"roleName"`
	PermIdList []string `json:"permIdList"`
}

type UpdateRoleResp struct {
	BaseResp
}

type UserInfo struct {
	Token    string `json:"token"`    // JWT Token
	Phone    string `json:"phone"`    // 手机号码
	NickName string `json:"nickname"` // 昵称
	HeadImg  string `json:"headImg"`  // 头像
}

type VerificationCodeReq struct {
	Phone string `json:"phone"` // 手机号码
}

type WechatCallBackGetReq struct {
	Signature string `form:"signature"` // 微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数。
	Timestamp string `form:"timestamp"` // 时间戳
	Nonce     string `form:"nonce"`     // 随机数
	Echostr   string `form:"echostr"`   // 随机字符串
}

type WechatCallBackPostReq struct {
	Signature    string `json:"signature"`    // 微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数。
	Timestamp    string `json:"timestamp"`    // 时间戳
	Nonce        string `json:"nonce"`        // 随机数
	ToUserName   string `json:"ToUserName"`   // 开发者微信号
	FromUserName string `json:"FromUserName"` // 发送方帐号（一个OpenID）
	CreateTime   int64  `json:"CreateTime"`   // 消息创建时间 （整型）
	MsgType      string `json:"MsgType"`      // 消息类型，event
	Event        string `json:"Event"`        // 事件类型 subscribe 或 SCAN
	EventKey     string `json:"EventKey"`     // 事件KEY值
	Ticket       string `json:"Ticket"`       // 二维码的ticket，可用来换取二维码图片
}

type WechatCallBackPostSignReq struct {
	Signature string `form:"signature"` // 微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数。
	Timestamp string `form:"timestamp"` // 时间戳
	Nonce     string `form:"nonce"`     // 随机数
}
