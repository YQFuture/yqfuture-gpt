// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	JWT "yufuture-gpt/app/training/cmd/api/internal/handler/JWT"
	basicFunction "yufuture-gpt/app/training/cmd/api/internal/handler/basicFunction"
	shopTraining "yufuture-gpt/app/training/cmd/api/internal/handler/shopTraining"
	"yufuture-gpt/app/training/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/getJWT",
				Handler: JWT.GetJWTHandler(serverCtx),
			},
		},
		rest.WithPrefix("/JWT"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/getDictInfoByType",
				Handler: basicFunction.GetDictInfoByTypeHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/basicFunction"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 判断店铺是否初次登录(从未进行过训练)
				Method:  http.MethodPost,
				Path:    "/JudgeFirstShop",
				Handler: shopTraining.JudgeFirstShopHandler(serverCtx),
			},
			{
				// 添加商品
				Method:  http.MethodPost,
				Path:    "/addGoods",
				Handler: shopTraining.AddGoodsHandler(serverCtx),
			},
			{
				// 启用商品
				Method:  http.MethodPost,
				Path:    "/enableGoods",
				Handler: shopTraining.EnableGoodsHandler(serverCtx),
			},
			{
				// 查询商品列表
				Method:  http.MethodPost,
				Path:    "/getGoodsPageList",
				Handler: shopTraining.GetGoodsPageListHandler(serverCtx),
			},
			{
				// 查询店铺列表
				Method:  http.MethodPost,
				Path:    "/getShopPageList",
				Handler: shopTraining.GetShopPageListHandler(serverCtx),
			},
			{
				// 预训练
				Method:  http.MethodPost,
				Path:    "/preSetting",
				Handler: shopTraining.PreSettingHandler(serverCtx),
			},
			{
				// 训练商品
				Method:  http.MethodPost,
				Path:    "/trainingGoods",
				Handler: shopTraining.TrainingGoodsHandler(serverCtx),
			},
			{
				// 训练店铺
				Method:  http.MethodPost,
				Path:    "/trainingShop",
				Handler: shopTraining.TrainingShopHandler(serverCtx),
			},
			{
				// 停用商品
				Method:  http.MethodPost,
				Path:    "/unEnableGoods",
				Handler: shopTraining.UnEnableGoodsHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/shopTraining"),
	)
}
