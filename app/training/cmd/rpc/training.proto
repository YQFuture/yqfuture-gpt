syntax = "proto3";

option go_package = "./training";

package training;

//基础功能
message DictInfoByTypeReq {
  string key = 1;
}
message DictInfoByTypeResp {
  repeated DictInfo list = 1;
}
message DictInfo {
  string name     = 1;
  string value    = 2;
  int64  orderNum = 3;
}
service BasicFunction {
  rpc getDictInfoByType(DictInfoByTypeReq) returns (DictInfoByTypeResp);
}

//知识库训练
message KnowledgeBaseTrainingReq {
}
message KnowledgeBaseTrainingResp {
}
service KnowledgeBaseTraining {
  rpc preSetting(KnowledgeBaseTrainingReq) returns (KnowledgeBaseTrainingResp);
}

//店铺训练
message ShopTrainingReq {
  int64 userId = 1;
  string uuid = 2;
}
message ShopTrainingResp {
  string result = 1;
}
message CancelPreSettingReq {
  int64 userId = 1;
  string uuid = 2;
}
message JudgeFirstShopReq {
  int64 userId = 1;
  string uuid = 2;
}
message JudgeFirstShopResp {
  int64 first = 1;
}

message ShopPageListReq {
  int64  userId  = 1;
  int64  pageNum  = 2;
  int64  pageSize = 3;
  string query  = 4;
  int64  platFormType = 5;
  int64  trainingStatus = 6;
  int64  updateTime = 7;
}
message ShopResp {
  int64  id = 1;
  string uuid = 2;
  string shopName = 3;
  int64  platformType = 4;
  int64  trainingStatus = 5;
  int64  trainingTimes = 6;
  int64  updateTime = 7;
}
message ShopPageListResp {
  int64 pageNum = 1;
  int64 pageSize = 2;
  int64 total = 3;
  repeated ShopResp list = 4;
}

message GoodsPageListReq {
  int64  shopId = 1;
  int64  pageNum  = 2;
  int64  pageSize = 3;
  string query  = 4;
  int64  enabled = 5;
  int64  updateTime = 6;
}

message GoodsResp {
  int64  id = 1;
  int64  shopId = 2;
  string goodsName = 3;
  string goodsUrl = 4;
  string trainingSummary = 5;
  int64  enabled = 6;
  int64  trainingStatus = 7;
  int64  trainingTimes = 8;
  int64  updateTime = 9;
}
message GoodsPageListResp {
  int64 pageNum = 1;
  int64 pageSize = 2;
  int64 total = 3;
  repeated GoodsResp list = 4;
}
message GoodsTrainingReq {
  int64 goodsId = 1;
}
message GoodsTrainingResp {
  string result = 1;
}
message TrainingShopReq {
  string uuid = 1;
  int64 userId = 2;
}
message TrainingShopResp {
  string result = 1;
}
message GetShopTrainingProgressReq {
  string uuid = 1;
  int64 userId = 2;
}
message GetShopTrainingProgressResp {
  string result = 1;
}
message TrainingGoodsReq {
  int64 goodsId = 1;
  int64 userId = 2;
}
message TrainingGoodsResp {
  string result = 1;
}
message AddGoodsReq {
  int64 shopId = 1;
  repeated string list = 2; // 商品url列表
  int64 userId = 3;
}
message AddGoodsResp {
  string result = 1;
}
message GetGoodsTrainingResultReq {
  int64 goodsId = 1;
}
message GetGoodsTrainingResultResp {
  string result = 1;
}
service ShopTraining {
  // 预训练
  rpc preSetting(ShopTrainingReq) returns (ShopTrainingResp);
  // 取消预训练
  rpc cancelPreSetting(CancelPreSettingReq) returns (ShopTrainingResp);

  // 查询店铺列表
  rpc getShopPageList(ShopPageListReq) returns (ShopPageListResp);
  // 训练店铺
  rpc trainingShop(TrainingShopReq) returns (TrainingShopResp);
  // 获取店铺训练进度
  rpc getShopTrainingProgress(GetShopTrainingProgressReq) returns (GetShopTrainingProgressResp);
  // 判断店铺是否初次登录(从未进行过训练)
  rpc judgeFirstShop(JudgeFirstShopReq) returns (JudgeFirstShopResp);

  // 查询商品列表
  rpc getGoodsPageList(GoodsPageListReq) returns (GoodsPageListResp);
  // 获取商品训练结果
  rpc getGoodsTrainingResult(GetGoodsTrainingResultReq) returns (GetGoodsTrainingResultResp);
  // 训练商品
  rpc trainingGoods(TrainingGoodsReq) returns (TrainingGoodsResp);
  // 添加商品
  rpc addGoods(AddGoodsReq) returns (AddGoodsResp);
  // 启用商品
  rpc enableGoods(GoodsTrainingReq) returns (GoodsTrainingResp);
  // 禁用商品
  rpc unEnableGoods(GoodsTrainingReq) returns (GoodsTrainingResp);
}