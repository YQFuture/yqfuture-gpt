// Code generated by goctl. DO NOT EDIT.
// Source: training.proto

package server

import (
	"context"

	"yufuture-gpt/app/training/cmd/rpc/internal/logic/shoptraining"
	"yufuture-gpt/app/training/cmd/rpc/internal/svc"
	"yufuture-gpt/app/training/cmd/rpc/pb/training"
)

type ShopTrainingServer struct {
	svcCtx *svc.ServiceContext
	training.UnimplementedShopTrainingServer
}

func NewShopTrainingServer(svcCtx *svc.ServiceContext) *ShopTrainingServer {
	return &ShopTrainingServer{
		svcCtx: svcCtx,
	}
}

// 预训练
func (s *ShopTrainingServer) PreSetting(ctx context.Context, in *training.ShopTrainingReq) (*training.ShopTrainingResp, error) {
	l := shoptraininglogic.NewPreSettingLogic(ctx, s.svcCtx)
	return l.PreSetting(in)
}

// 查询店铺列表
func (s *ShopTrainingServer) GetShopPageList(ctx context.Context, in *training.ShopPageListReq) (*training.ShopPageListResp, error) {
	l := shoptraininglogic.NewGetShopPageListLogic(ctx, s.svcCtx)
	return l.GetShopPageList(in)
}

// 训练店铺
func (s *ShopTrainingServer) TrainingShop(ctx context.Context, in *training.TrainingShopReq) (*training.TrainingShopResp, error) {
	l := shoptraininglogic.NewTrainingShopLogic(ctx, s.svcCtx)
	return l.TrainingShop(in)
}

// 判断店铺是否初次登录(从未进行过训练)
func (s *ShopTrainingServer) JudgeFirstShop(ctx context.Context, in *training.JudgeFirstShopReq) (*training.JudgeFirstShopResp, error) {
	l := shoptraininglogic.NewJudgeFirstShopLogic(ctx, s.svcCtx)
	return l.JudgeFirstShop(in)
}

// 查询商品列表
func (s *ShopTrainingServer) GetGoodsPageList(ctx context.Context, in *training.GoodsPageListReq) (*training.GoodsPageListResp, error) {
	l := shoptraininglogic.NewGetGoodsPageListLogic(ctx, s.svcCtx)
	return l.GetGoodsPageList(in)
}

// 训练商品
func (s *ShopTrainingServer) TrainingGoods(ctx context.Context, in *training.TrainingGoodsReq) (*training.TrainingGoodsResp, error) {
	l := shoptraininglogic.NewTrainingGoodsLogic(ctx, s.svcCtx)
	return l.TrainingGoods(in)
}

// 添加商品
func (s *ShopTrainingServer) AddGoods(ctx context.Context, in *training.AddGoodsReq) (*training.AddGoodsResp, error) {
	l := shoptraininglogic.NewAddGoodsLogic(ctx, s.svcCtx)
	return l.AddGoods(in)
}

// 启用商品
func (s *ShopTrainingServer) EnableGoods(ctx context.Context, in *training.GoodsTrainingReq) (*training.GoodsTrainingResp, error) {
	l := shoptraininglogic.NewEnableGoodsLogic(ctx, s.svcCtx)
	return l.EnableGoods(in)
}

// 禁用商品
func (s *ShopTrainingServer) UnEnableGoods(ctx context.Context, in *training.GoodsTrainingReq) (*training.GoodsTrainingResp, error) {
	l := shoptraininglogic.NewUnEnableGoodsLogic(ctx, s.svcCtx)
	return l.UnEnableGoods(in)
}
