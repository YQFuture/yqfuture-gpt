// Code generated by goctl. DO NOT EDIT.
// Source: training.proto

package shoptraining

import (
	"context"

	"yufuture-gpt/app/training/cmd/rpc/pb/training"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddGoodsReq                  = training.AddGoodsReq
	AddGoodsResp                 = training.AddGoodsResp
	CancelPreSettingGoodsReq     = training.CancelPreSettingGoodsReq
	CancelPreSettingGoodsResp    = training.CancelPreSettingGoodsResp
	CancelPreSettingReq          = training.CancelPreSettingReq
	DictInfo                     = training.DictInfo
	DictInfoByTypeReq            = training.DictInfoByTypeReq
	DictInfoByTypeResp           = training.DictInfoByTypeResp
	GetGoodsTrainingProgressReq  = training.GetGoodsTrainingProgressReq
	GetGoodsTrainingProgressResp = training.GetGoodsTrainingProgressResp
	GetGoodsTrainingResultReq    = training.GetGoodsTrainingResultReq
	GetGoodsTrainingResultResp   = training.GetGoodsTrainingResultResp
	GetShopTrainingProgressReq   = training.GetShopTrainingProgressReq
	GetShopTrainingProgressResp  = training.GetShopTrainingProgressResp
	GoodsPageListReq             = training.GoodsPageListReq
	GoodsPageListResp            = training.GoodsPageListResp
	GoodsResp                    = training.GoodsResp
	GoodsTrainingReq             = training.GoodsTrainingReq
	GoodsTrainingResp            = training.GoodsTrainingResp
	JudgeFirstShopReq            = training.JudgeFirstShopReq
	JudgeFirstShopResp           = training.JudgeFirstShopResp
	KnowledgeBaseTrainingReq     = training.KnowledgeBaseTrainingReq
	KnowledgeBaseTrainingResp    = training.KnowledgeBaseTrainingResp
	PreSettingGoodsReq           = training.PreSettingGoodsReq
	PreSettingGoodsResp          = training.PreSettingGoodsResp
	SaveGoods                    = training.SaveGoods
	SaveShopReq                  = training.SaveShopReq
	SaveShopResp                 = training.SaveShopResp
	ShopPageListReq              = training.ShopPageListReq
	ShopPageListResp             = training.ShopPageListResp
	ShopResp                     = training.ShopResp
	ShopTrainingReq              = training.ShopTrainingReq
	ShopTrainingResp             = training.ShopTrainingResp
	TrainingGoodsReq             = training.TrainingGoodsReq
	TrainingGoodsResp            = training.TrainingGoodsResp
	TrainingShopReq              = training.TrainingShopReq
	TrainingShopResp             = training.TrainingShopResp

	ShopTraining interface {
		// 预训练
		PreSetting(ctx context.Context, in *ShopTrainingReq, opts ...grpc.CallOption) (*ShopTrainingResp, error)
		// 取消预训练
		CancelPreSetting(ctx context.Context, in *CancelPreSettingReq, opts ...grpc.CallOption) (*ShopTrainingResp, error)
		// 查询店铺列表
		GetShopPageList(ctx context.Context, in *ShopPageListReq, opts ...grpc.CallOption) (*ShopPageListResp, error)
		// 训练店铺
		TrainingShop(ctx context.Context, in *TrainingShopReq, opts ...grpc.CallOption) (*TrainingShopResp, error)
		// 获取店铺训练进度
		GetShopTrainingProgress(ctx context.Context, in *GetShopTrainingProgressReq, opts ...grpc.CallOption) (*GetShopTrainingProgressResp, error)
		// 判断店铺是否初次登录(从未进行过训练)
		JudgeFirstShop(ctx context.Context, in *JudgeFirstShopReq, opts ...grpc.CallOption) (*JudgeFirstShopResp, error)
		// 查询商品列表
		GetGoodsPageList(ctx context.Context, in *GoodsPageListReq, opts ...grpc.CallOption) (*GoodsPageListResp, error)
		// 获取商品训练结果
		GetGoodsTrainingResult(ctx context.Context, in *GetGoodsTrainingResultReq, opts ...grpc.CallOption) (*GetGoodsTrainingResultResp, error)
		// 预训练商品
		PreSettingGoods(ctx context.Context, in *PreSettingGoodsReq, opts ...grpc.CallOption) (*PreSettingGoodsResp, error)
		// 取消预训练商品
		CancelPreSettingGoods(ctx context.Context, in *CancelPreSettingGoodsReq, opts ...grpc.CallOption) (*CancelPreSettingGoodsResp, error)
		// 训练商品
		TrainingGoods(ctx context.Context, in *TrainingGoodsReq, opts ...grpc.CallOption) (*TrainingGoodsResp, error)
		// 获取商品训练进度
		GetGoodsTrainingProgress(ctx context.Context, in *GetGoodsTrainingProgressReq, opts ...grpc.CallOption) (*GetGoodsTrainingProgressResp, error)
		// 添加商品
		AddGoods(ctx context.Context, in *AddGoodsReq, opts ...grpc.CallOption) (*AddGoodsResp, error)
		// 启用商品
		EnableGoods(ctx context.Context, in *GoodsTrainingReq, opts ...grpc.CallOption) (*GoodsTrainingResp, error)
		// 禁用商品
		UnEnableGoods(ctx context.Context, in *GoodsTrainingReq, opts ...grpc.CallOption) (*GoodsTrainingResp, error)
		// 保存爬取的店铺基本数据
		SaveShop(ctx context.Context, in *SaveShopReq, opts ...grpc.CallOption) (*SaveShopResp, error)
	}

	defaultShopTraining struct {
		cli zrpc.Client
	}
)

func NewShopTraining(cli zrpc.Client) ShopTraining {
	return &defaultShopTraining{
		cli: cli,
	}
}

// 预训练
func (m *defaultShopTraining) PreSetting(ctx context.Context, in *ShopTrainingReq, opts ...grpc.CallOption) (*ShopTrainingResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.PreSetting(ctx, in, opts...)
}

// 取消预训练
func (m *defaultShopTraining) CancelPreSetting(ctx context.Context, in *CancelPreSettingReq, opts ...grpc.CallOption) (*ShopTrainingResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.CancelPreSetting(ctx, in, opts...)
}

// 查询店铺列表
func (m *defaultShopTraining) GetShopPageList(ctx context.Context, in *ShopPageListReq, opts ...grpc.CallOption) (*ShopPageListResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.GetShopPageList(ctx, in, opts...)
}

// 训练店铺
func (m *defaultShopTraining) TrainingShop(ctx context.Context, in *TrainingShopReq, opts ...grpc.CallOption) (*TrainingShopResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.TrainingShop(ctx, in, opts...)
}

// 获取店铺训练进度
func (m *defaultShopTraining) GetShopTrainingProgress(ctx context.Context, in *GetShopTrainingProgressReq, opts ...grpc.CallOption) (*GetShopTrainingProgressResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.GetShopTrainingProgress(ctx, in, opts...)
}

// 判断店铺是否初次登录(从未进行过训练)
func (m *defaultShopTraining) JudgeFirstShop(ctx context.Context, in *JudgeFirstShopReq, opts ...grpc.CallOption) (*JudgeFirstShopResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.JudgeFirstShop(ctx, in, opts...)
}

// 查询商品列表
func (m *defaultShopTraining) GetGoodsPageList(ctx context.Context, in *GoodsPageListReq, opts ...grpc.CallOption) (*GoodsPageListResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.GetGoodsPageList(ctx, in, opts...)
}

// 获取商品训练结果
func (m *defaultShopTraining) GetGoodsTrainingResult(ctx context.Context, in *GetGoodsTrainingResultReq, opts ...grpc.CallOption) (*GetGoodsTrainingResultResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.GetGoodsTrainingResult(ctx, in, opts...)
}

// 预训练商品
func (m *defaultShopTraining) PreSettingGoods(ctx context.Context, in *PreSettingGoodsReq, opts ...grpc.CallOption) (*PreSettingGoodsResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.PreSettingGoods(ctx, in, opts...)
}

// 取消预训练商品
func (m *defaultShopTraining) CancelPreSettingGoods(ctx context.Context, in *CancelPreSettingGoodsReq, opts ...grpc.CallOption) (*CancelPreSettingGoodsResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.CancelPreSettingGoods(ctx, in, opts...)
}

// 训练商品
func (m *defaultShopTraining) TrainingGoods(ctx context.Context, in *TrainingGoodsReq, opts ...grpc.CallOption) (*TrainingGoodsResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.TrainingGoods(ctx, in, opts...)
}

// 获取商品训练进度
func (m *defaultShopTraining) GetGoodsTrainingProgress(ctx context.Context, in *GetGoodsTrainingProgressReq, opts ...grpc.CallOption) (*GetGoodsTrainingProgressResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.GetGoodsTrainingProgress(ctx, in, opts...)
}

// 添加商品
func (m *defaultShopTraining) AddGoods(ctx context.Context, in *AddGoodsReq, opts ...grpc.CallOption) (*AddGoodsResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.AddGoods(ctx, in, opts...)
}

// 启用商品
func (m *defaultShopTraining) EnableGoods(ctx context.Context, in *GoodsTrainingReq, opts ...grpc.CallOption) (*GoodsTrainingResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.EnableGoods(ctx, in, opts...)
}

// 禁用商品
func (m *defaultShopTraining) UnEnableGoods(ctx context.Context, in *GoodsTrainingReq, opts ...grpc.CallOption) (*GoodsTrainingResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.UnEnableGoods(ctx, in, opts...)
}

// 保存爬取的店铺基本数据
func (m *defaultShopTraining) SaveShop(ctx context.Context, in *SaveShopReq, opts ...grpc.CallOption) (*SaveShopResp, error) {
	client := training.NewShopTrainingClient(m.cli.Conn())
	return client.SaveShop(ctx, in, opts...)
}
